---
title: "俺たちは雰囲気でdependenciesを書いていた"
date: "2017-06-28 16:02:11 +0900"
---

# npm で使用するセマンティックバージョン

## バージョン
- バージョニングは http://semver.org/ で説明されている
- `=`および`v`の2つの文字は取り除かれ、無視させる

## レンジ
- バージョンレンジは、レンジを満たすようにバージョンを指定する、comparatorにセットされる
- comparatorはoperatorとバージョンによって構成される。プリミティブなoperatorとして、
  - `<` 未満
  - `<=` 以下
  - `>` を超える
  - `>=` 以上
  - `=` 等しい(operatorが指定されてなかった場合は、 `=`とみなされるため`=`は必須ではないが、書いたほうが良い)

  がある。

  例えば、comparatorが `>=1.2.7` だったら、`1.2.7`、`1.2.8`、`2.5.3`、`1.3.9`、にはマッチするが、`1.2.6`や`1.1.0`にはマッチしない。

  複数のcomparatorはスペースによって結合されることで、comparator setを形成し、comparator setは全てのcomparatorが含んでいる交点によって満たされる。

  レンジは`||`で連結された1つ以上のcomparator setで構成される。バージョンは 、`||`で分離されたcomparator set のうち最低1つがバージョンによって満たされる場合にのみ、マッチする。

  例えば、`>=1.2.7 <1.3.0`というcomparator setは`1.2.7`、`1.2.8`、`1.2.99`にはマッチするが、`1.2.6`、`1.3.0`、`1.1.0`、にはマッチしない。

  さらに、`1.2.7 || >=1.2.9 <2.0.0` というレンジは、`1.2.7`、`1.2.9`、`1.4.6`にはマッチするが、`1.2.8`、`2.0.0`にはマッチしない

## プリリリースタグ
バージョンが `1.2.3-alpha.3` のようにプリリリースタグを持っていた場合、最低1つ以上のcomparatorがプリリリースを持っている[major, minor, patch]タプルと同じ場合のみ、comparator setを満たすことが許される

例えば、`>1.2.3-alpha.3`は`1.2.3-alpha.7`とマッチ可能だが、`3.4.5-alpha.9`では満たされない。`3.4.5-alpha.9`が、セマンティックバージョニングで技術的には`1.2.3-alpha.7`より大きくてもだ。

このふるまいの意図は2つある。

1つは、プリリリースバージョンは非常に高頻度でアップデートされ、多数の未だ一般的な消費と合わない破壊的変更を含むことだ。したがって、デフォルトでは、プリリリースバージョンは意味論的なマッチングのレンジからは除外される。

2つ目は、プリリースバージョンの使用を強いられているユーザーは明らかに示されている
